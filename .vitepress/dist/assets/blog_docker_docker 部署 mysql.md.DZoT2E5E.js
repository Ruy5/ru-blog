import{_ as s,c as a,o as i,a4 as e}from"./chunks/framework.eSehZVqP.js";const y=JSON.parse('{"title":"docker 部署 mysql 命令","description":"","frontmatter":{},"headers":[],"relativePath":"blog/docker/docker 部署 mysql.md","filePath":"blog/docker/docker 部署 mysql.md"}'),t={name:"blog/docker/docker 部署 mysql.md"},l=e('<h1 id="docker-部署-mysql-命令" tabindex="-1">docker 部署 mysql 命令 <a class="header-anchor" href="#docker-部署-mysql-命令" aria-label="Permalink to &quot;docker 部署 mysql 命令&quot;">​</a></h1><h2 id="取最新版的-mysql-镜像" tabindex="-1">取最新版的 MySQL 镜像 <a class="header-anchor" href="#取最新版的-mysql-镜像" aria-label="Permalink to &quot;取最新版的 MySQL 镜像&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql:latest</span></span></code></pre></div><h2 id="查看本地镜像" tabindex="-1">查看本地镜像 <a class="header-anchor" href="#查看本地镜像" aria-label="Permalink to &quot;查看本地镜像&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> images</span></span></code></pre></div><h2 id="运行容器" tabindex="-1">运行容器 <a class="header-anchor" href="#运行容器" aria-label="Permalink to &quot;运行容器&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -itd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql-test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3306:3306</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MYSQL_ROOT_PASSWORD=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123456</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql</span></span></code></pre></div><p>参数说明：</p><ul><li>-p 3306:3306 ：映射容器服务的 3306 端口到宿主机的 3306 端口，外部主机可以直接通过 宿主机ip:3306 访问到 MySQL 的服务。</li><li>MYSQL_ROOT_PASSWORD=123456：设置 MySQL 服务 root 用户的密码。</li></ul>',9),h=[l];function n(p,d,o,r,k,c){return i(),a("div",null,h)}const g=s(t,[["render",n]]);export{y as __pageData,g as default};
